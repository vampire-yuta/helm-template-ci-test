name: CI

on:
  pull_request:
    paths:
      - testapp/**
      - testapp2/**
      - testapp3/**

jobs:
  set-matrix:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Find changed directories
        id: find-changed-dirs
        run: |
          git fetch
          # dirs=$(git diff --name-only HEAD..origin/main | awk -F'/' '{print $1}' | grep -v .github | grep test | jq -R . | jq -s .)
          dirs=$(git diff --name-only origin/main -- | awk -F'/' '{print $1}' | jq -R -s 'split("\n") | map(select(length > 0))')
          echo $dirs
          echo "::set-output name=dirs::${dirs}"

  helm-template:
    needs: set-matrix
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      issues: write
      pull-requests: write

    strategy:
      matrix:
        # chart: [testapp, testapp2, testapp3] # チャートディレクトリをリスト化
        chart: ${{ fromJson(echo ${{ needs.set-matrix.outputs.dirs | jq -s .[0] }}) }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Helm
        uses: azure/setup-helm@v4

      - name: Generate Helm Template
        run: |
          helm template -f testapp/values.yaml ./${{ matrix.chart }} > /tmp/template_output

      - name: Post Template as PR Comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require("fs");
            const output = fs.readFileSync("/tmp/template_output", "utf8");
            
            const commentBody = `### Helm Template Output ${{ matrix.chart }}
            <details><summary>Show Output</summary>

            \`\`\`yaml
            ${output}
            \`\`\`

            </details>`;
            
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });
